{
  "contractName": "SignatureChecker",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/interfaces/IERC1271.sol\":{\"keccak256\":\"0xecf7171ae02345b2cf103aca73877685f2cc0db0151c363b4d7460b2507739ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b50e2b5cd844d316c30f0456db6594de737319f1e404f6ab31f1504bee75b7bc\",\"dweb:/ipfs/QmYiTb88jx4a3LEiUNztLbZJ7PxBzoDztuXToHxrUJ29um\"]},\"/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x2b7a01bbc90040fd4a48bc143ac5a192da3b9bfc559ac08a78eaca40bf49e436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8a02af79b7d1c4eaa385d3b9d26509ac2619eab43bfbbc2ef9ef74508f8146\",\"dweb:/ipfs/QmWhEKw9ZmDjc9qfLmJcrxgopoCvbBNyFhUCJSewhSpzRi\"]},\"/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x694f1986438b2e5ecb209f3dc8dffdb01e543ed3308116daf862dc6b22b1b002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33b584f6622ab83f56e0c0d89a8c9fc206682701dbf488a79c666d8e23f45bcd\",\"dweb:/ipfs/QmcSdQStwCHD762CFW9Cu1xEwdDNCd9s6tPeoo5uoSuxGJ\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fff87f0337a5f6e3ecb19b310a454ec84d69afc4516447fd394575542799d41964736f6c63430008030033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fff87f0337a5f6e3ecb19b310a454ec84d69afc4516447fd394575542799d41964736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "685:526:147:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "685:526:147:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n *\n * _Available since v4.1._\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        if (Address.isContract(signer)) {\n            try IERC1271(signer).isValidSignature(hash, signature) returns (bytes4 magicValue) {\n                return magicValue == IERC1271(signer).isValidSignature.selector;\n            } catch {\n                return false;\n            }\n        } else {\n            return ECDSA.recover(hash, signature) == signer;\n        }\n    }\n}\n",
  "sourcePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/SignatureChecker.sol",
  "ast": {
    "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        18801
      ],
      "ECDSA": [
        19543
      ],
      "IERC1271": [
        3830
      ],
      "SignatureChecker": [
        19673
      ]
    },
    "id": 19674,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19616,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:147"
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 19617,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 19544,
        "src": "58:21:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/Address.sol",
        "file": "../Address.sol",
        "id": 19618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 18802,
        "src": "80:24:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 19619,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 3831,
        "src": "105:39:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 19620,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:147",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 19673,
        "linearizedBaseContracts": [
          19673
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:147",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19671,
              "nodeType": "Block",
              "src": "828:381:147",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 19633,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19622,
                        "src": "861:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19631,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18801,
                        "src": "842:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$18801_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 19632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18525,
                      "src": "842:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 19634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:26:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 19669,
                    "nodeType": "Block",
                    "src": "1131:72:147",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 19667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 19663,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19624,
                                "src": "1166:4:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 19664,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19626,
                                "src": "1172:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 19661,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19543,
                                "src": "1152:5:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$19543_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 19662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19448,
                              "src": "1152:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 19665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1152:30:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 19666,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19622,
                            "src": "1186:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1152:40:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 19630,
                        "id": 19668,
                        "nodeType": "Return",
                        "src": "1145:47:147"
                      }
                    ]
                  },
                  "id": 19670,
                  "nodeType": "IfStatement",
                  "src": "838:365:147",
                  "trueBody": {
                    "id": 19660,
                    "nodeType": "Block",
                    "src": "870:255:147",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 19653,
                              "nodeType": "Block",
                              "src": "967:96:147",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 19651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 19645,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19643,
                                      "src": "992:10:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 19647,
                                              "name": "signer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 19622,
                                              "src": "1015:6:147",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 19646,
                                            "name": "IERC1271",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3830,
                                            "src": "1006:8:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1271_$3830_$",
                                              "typeString": "type(contract IERC1271)"
                                            }
                                          },
                                          "id": 19648,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1006:16:147",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1271_$3830",
                                            "typeString": "contract IERC1271"
                                          }
                                        },
                                        "id": 19649,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3829,
                                        "src": "1006:33:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                        }
                                      },
                                      "id": 19650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "1006:42:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "992:56:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 19630,
                                  "id": 19652,
                                  "nodeType": "Return",
                                  "src": "985:63:147"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 19654,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 19644,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 19643,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nameLocation": "955:10:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 19654,
                                  "src": "948:17:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 19642,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "948:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "947:19:147"
                            },
                            "src": "939:124:147"
                          },
                          {
                            "block": {
                              "id": 19657,
                              "nodeType": "Block",
                              "src": "1070:45:147",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 19655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1095:5:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 19630,
                                  "id": 19656,
                                  "nodeType": "Return",
                                  "src": "1088:12:147"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 19658,
                            "nodeType": "TryCatchClause",
                            "src": "1064:51:147"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 19639,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19624,
                              "src": "922:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 19640,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19626,
                              "src": "928:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 19636,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19622,
                                  "src": "897:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 19635,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3830,
                                "src": "888:8:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$3830_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 19637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "888:16:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$3830",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 19638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3829,
                            "src": "888:33:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 19641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:50:147",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 19659,
                        "nodeType": "TryStatement",
                        "src": "884:231:147"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 19672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:147",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19622,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "753:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "745:14:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19624,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "769:4:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "761:12:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19623,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19626,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "788:9:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "775:22:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19625,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:5:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:54:147"
            },
            "returnParameters": {
              "id": 19630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "822:4:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:4:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:6:147"
            },
            "scope": 19673,
            "src": "716:493:147",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 19674,
        "src": "685:526:147"
      }
    ],
    "src": "33:1179:147"
  },
  "legacyAST": {
    "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        18801
      ],
      "ECDSA": [
        19543
      ],
      "IERC1271": [
        3830
      ],
      "SignatureChecker": [
        19673
      ]
    },
    "id": 19674,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19616,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:147"
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 19617,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 19544,
        "src": "58:21:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/utils/Address.sol",
        "file": "../Address.sol",
        "id": 19618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 18802,
        "src": "80:24:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/brendanmorrison/Code/Nftrees/contracts/OpenZepplin/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 19619,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19674,
        "sourceUnit": 3831,
        "src": "105:39:147",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 19620,
          "nodeType": "StructuredDocumentation",
          "src": "146:538:147",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite).\n _Available since v4.1._"
        },
        "fullyImplemented": true,
        "id": 19673,
        "linearizedBaseContracts": [
          19673
        ],
        "name": "SignatureChecker",
        "nameLocation": "693:16:147",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 19671,
              "nodeType": "Block",
              "src": "828:381:147",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 19633,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19622,
                        "src": "861:6:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 19631,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18801,
                        "src": "842:7:147",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$18801_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 19632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18525,
                      "src": "842:18:147",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 19634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "842:26:147",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 19669,
                    "nodeType": "Block",
                    "src": "1131:72:147",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 19667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 19663,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19624,
                                "src": "1166:4:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 19664,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19626,
                                "src": "1172:9:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 19661,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19543,
                                "src": "1152:5:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$19543_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 19662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19448,
                              "src": "1152:13:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 19665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1152:30:147",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 19666,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19622,
                            "src": "1186:6:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1152:40:147",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 19630,
                        "id": 19668,
                        "nodeType": "Return",
                        "src": "1145:47:147"
                      }
                    ]
                  },
                  "id": 19670,
                  "nodeType": "IfStatement",
                  "src": "838:365:147",
                  "trueBody": {
                    "id": 19660,
                    "nodeType": "Block",
                    "src": "870:255:147",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 19653,
                              "nodeType": "Block",
                              "src": "967:96:147",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 19651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 19645,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 19643,
                                      "src": "992:10:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 19647,
                                              "name": "signer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 19622,
                                              "src": "1015:6:147",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 19646,
                                            "name": "IERC1271",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3830,
                                            "src": "1006:8:147",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1271_$3830_$",
                                              "typeString": "type(contract IERC1271)"
                                            }
                                          },
                                          "id": 19648,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1006:16:147",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1271_$3830",
                                            "typeString": "contract IERC1271"
                                          }
                                        },
                                        "id": 19649,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3829,
                                        "src": "1006:33:147",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                        }
                                      },
                                      "id": 19650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "1006:42:147",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "992:56:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 19630,
                                  "id": 19652,
                                  "nodeType": "Return",
                                  "src": "985:63:147"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 19654,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 19644,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 19643,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nameLocation": "955:10:147",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 19654,
                                  "src": "948:17:147",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 19642,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "948:6:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "947:19:147"
                            },
                            "src": "939:124:147"
                          },
                          {
                            "block": {
                              "id": 19657,
                              "nodeType": "Block",
                              "src": "1070:45:147",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 19655,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1095:5:147",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 19630,
                                  "id": 19656,
                                  "nodeType": "Return",
                                  "src": "1088:12:147"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 19658,
                            "nodeType": "TryCatchClause",
                            "src": "1064:51:147"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 19639,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19624,
                              "src": "922:4:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 19640,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19626,
                              "src": "928:9:147",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 19636,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19622,
                                  "src": "897:6:147",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 19635,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3830,
                                "src": "888:8:147",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$3830_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 19637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "888:16:147",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$3830",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 19638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3829,
                            "src": "888:33:147",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 19641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "888:50:147",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 19659,
                        "nodeType": "TryStatement",
                        "src": "884:231:147"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 19672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "725:19:147",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19622,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "753:6:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "745:14:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:147",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19624,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "769:4:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "761:12:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19623,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19626,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "788:9:147",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "775:22:147",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19625,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "775:5:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "744:54:147"
            },
            "returnParameters": {
              "id": 19630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19672,
                  "src": "822:4:147",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19628,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:4:147",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:6:147"
            },
            "scope": 19673,
            "src": "716:493:147",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 19674,
        "src": "685:526:147"
      }
    ],
    "src": "33:1179:147"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-19T17:43:11.883Z",
  "devdoc": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite). _Available since v4.1._",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}